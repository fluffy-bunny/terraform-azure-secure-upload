name: Deploy DotNet project to Azure Function App

on:
  [push]

env:
  FRIENDLY_NAME: secure-upload  
  SHORT_NAME: secureupload  
  LOCATION: 'eastus2'
  VAULT_NAME: 'kv-tf-secure-upload'                
jobs:
  Setup-Azure-Terraform-Backend-State-Management:
    runs-on: ubuntu-latest
    steps:
    - name: 'az login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: 'Setup Azure Terraform Backend'
      shell: bash
      run: |
        az account show
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        ls
        bash ./bash/setup.sh ${{ env.FRIENDLY_NAME }} ${{ env.SHORT_NAME }} ${{ env.LOCATION }}
        popd
  Main-Terraform:
    needs: Setup-Azure-Terraform-Backend-State-Management
    runs-on: ubuntu-latest
    steps:

    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.github_token}} 

    # Now you can pass ${{ steps.buildnumber.outputs.build_number }} to the next steps.
    - name: Another step as an example
      uses: actions/hello-world-docker-action@v1
      with:
        who-to-greet: ${{ steps.buildnumber.outputs.build_number }}

    - name: 'Terraform Init'
      shell: bash
      run: |
        echo 'build_number:'${{ steps.buildnumber.outputs.build_number }}

    - name: 'az login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master
    
    - name: 'Install Terraform'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        sudo apt-get install wget unzip
        if [ -d "terraform" ] 
        then
          echo "Directory terraform exists." 
          rm -r terraform
        fi
        # wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
        unzip terraform_0.12.24_linux_amd64.zip 
        sudo cp terraform /usr/local/bin
        sudo chmod +x /usr/local/bin
        terraform --version 
        popd
        
    - name: 'Terraform Init'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        echo 'export ARM_ACCESS_KEY=$(az keyvault secret show --name terraform-backend-key --vault-name ${{ env.VAULT_NAME }} --query value -o tsv)'
        export ARM_ACCESS_KEY=$(az keyvault secret show --name terraform-backend-key --vault-name ${{ env.VAULT_NAME }} --query value -o tsv)
        export ARM_CLIENT_ID='${{ secrets.ARM_CLIENT_ID }}'
        export ARM_CLIENT_SECRET='${{ secrets.ARM_CLIENT_SECRET }}'
        export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
        export ARM_TENANT_ID=$(az account show --query tenantId | xargs)

        ls
        cd src/
        terraform init 
        popd

    - name: 'Terraform Plan'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        export ARM_ACCESS_KEY=$(az keyvault secret show --name terraform-backend-key --vault-name ${{ env.VAULT_NAME }} --query value -o tsv)
        export ARM_CLIENT_ID='${{secrets.ARM_CLIENT_ID}}'
        export ARM_CLIENT_SECRET='${{secrets.ARM_CLIENT_SECRET}}'
        export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
        export ARM_TENANT_ID=$(az account show --query tenantId | xargs)

        ls
        cd src/
        terraform plan -out=tf.plan
        popd
    
    - name: 'Terraform Apply'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        export ARM_ACCESS_KEY=$(az keyvault secret show --name terraform-backend-key --vault-name ${{ env.VAULT_NAME }} --query value -o tsv)
        export ARM_CLIENT_ID='${{secrets.ARM_CLIENT_ID}}'
        export ARM_CLIENT_SECRET='${{secrets.ARM_CLIENT_SECRET}}'
        export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
        export ARM_TENANT_ID=$(az account show --query tenantId | xargs)

        ls
        cd src/
        terraform apply tf.plan
        popd 

    - name: 'Install AzCopy'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        sudo apt-get install wget unzip
        if [ -d "azcopy_linux_amd64_10.3.4" ] 
        then
          echo "Directory azcopy_linux_amd64_10.3.4 exists." 
          rm -r azcopy_linux_amd64_10.3.4
        fi
        if [ -f "/usr/local/bin/azcopy" ] 
        then
          echo "File /usr/local/bin/azcopy exists." 
           sudo rm /usr/local/bin/azcopy
        fi

        # wget https://aka.ms/downloadazcopy-v10-linux
        # tar -xvf downloadazcopy-v10-linux
        tar -xvf azcopy_linux_amd64_10.3.4.tar.gz
        sudo cp ./azcopy_linux_amd64_*/azcopy /usr/local/bin/
        sudo chmod +x /usr/local/bin
        sudo azcopy --version
        popd